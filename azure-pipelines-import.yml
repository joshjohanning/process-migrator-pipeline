name: $(TargetOrg)-$(Date:yyyyMMdd).$(Rev:r)

trigger: none

pool:
  vmImage: ubuntu-latest
  
variables:
- group: azdo

parameters:
- name: deleteExistingProcessTemplate
  type: boolean
  default: false

steps:

- checkout: self
  persistCredentials: true

- script: git clone https://github.com/soccerjoshj07/process-migrator
  displayName: clone repository
  workingDirectory: $(Pipeline.Workspace)

- script: |
    npm install
    npm run build
  displayName: 'npm install and build'
  workingDirectory: $(Pipeline.Workspace)/process-migrator

- ${{ if eq(parameters.deleteExistingProcessTemplate, 'true') }}:
  - script: |
      processToDelete=$(basename $(ProcessFileName) .json)

      output=$(curl -s -u :$(PAT) "https://dev.azure.com/$(TargetOrg)/_apis/work/processes?api-version=6.1-preview.2" | jq '.value')
      for row in $(echo "${output}" | jq -r '.[] | @base64'); do
        _jq() {
          echo ${row} | base64 --decode | jq -r ${1}
        }

        if [[ $(_jq '.name') = "${processToDelete}" ]]; then
          id=$(echo $(_jq '.typeId'))
          count=1
        fi
      done

      if [[ ${count} == 1 ]]; then
        echo "ID to delete: $id"
        curl -u :$(PAT) -X DELETE "https://dev.azure.com/$(TargetOrg)/_apis/work/processes/${id}?api-version=6.1-preview.2"
      else
        echo "process template not found: ${processToDelete}"
        exit -1
      fi

    condition: and(succeeded(), eq('${{ parameters.deleteExistingProcessTemplate }}', true))
    displayName: delete existing process template

- script: | 
    cat <<< $(jq '.targetAccountUrl = "https://dev.azure.com/$(TargetOrg)"' configuration.json) > configuration.json
    cat <<< $(jq '.targetAccountToken = "$(PAT)"' configuration.json) > configuration.json
    cat <<< $(jq '.options["processFilename"] = "$(Build.SourcesDirectory)/$(ProcessFileName)"' configuration.json) > configuration.json
    cat <<< $(jq '.options["logLevel"] = "verbose"' configuration.json) > configuration.json
    cat configuration.json
  displayName: setup config
  workingDirectory: $(Pipeline.Workspace)/process-migrator

- script: |
    set -euxo pipefail
    node build/nodejs/nodejs/Main.js --mode=import
  displayName: 'run app'
  workingDirectory: $(Pipeline.Workspace)/process-migrator
